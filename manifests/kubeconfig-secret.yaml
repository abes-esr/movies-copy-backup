apiVersion: v1
data:
  kubeconfig: apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkVENDQWwyZ0F3SUJBZ0lJWVFzWlY4QW1oZHd3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5qYzNNVFl6TmpNM01CNFhEVEl6TURJeU16RTBORGN4TjFvWApEVEkxTURJeU1qRTBORGN4T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVoY0hCekxtOXlZMmhwWkdWbExtOXJaQzFrClpYWXVZV0psY3k1bWNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtRSzBqdTUKd3FpYndKeGs2TjROV01ETmpOK2U2Tk9aSkN1blJEUjlPMXljaUFuWGU0RjN5TGtOT0U5bXFuN0xvYzZUU05ibQpEdDlLMlJxSTVrL0pnKzdaaHd0N2NSemZFU21aUkU0cW8rY2kxNFNLMm51cnNYVnlVQUlwcDVxQWdlaXBUN0FSCmtSbjhBZUM0U0JuNjI3V2twejBlRG1zSFoyWGR4NW53cFJuSkhkSGY4ck1PNmxPaWRLMnc3YXJrSHdKQUxxT0sKQitXT1kxNXBVcVR6VnBuczJvdGY2UHJNWnM5MXY5emhUNXNZaDdBR2FlWUdVVEkrc3VVa1VUTk04a3ZiOGRoRgphVFBqbVJodDhMaVZCL3ZHdzhId1A1S0dVa2MyZ252MndhVU90YjZjalVGbGhCL0Nnbm1lQmlpb2JCY0hXTWR0CitkdnprbnkweGwraGEwa0NBd0VBQWFPQm9qQ0JuekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3cKQ2dZSUt3WUJCUVVIQXdFd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVaU5uR0hMS3JrNkpkc3B0cAp1NS9ZU1pvbTNVTXdId1lEVlIwakJCZ3dGb0FVUkdyOWpENlZrbkJzQWxOMHJ2S0JHbHBqWW9Bd0tnWURWUjBSCkJDTXdJWUlmS2k1aGNIQnpMbTl5WTJocFpHVmxMbTlyWkMxa1pYWXVZV0psY3k1bWNqQU5CZ2txaGtpRzl3MEIKQVFzRkFBT0NBUUVBU1N6YkJDaEs3WE5GT2xUMUNlRCtoQnphNm9ndjBhSDVoMEtxY29TN2dnMTk4MEtMRko0bwptd24yaXJNYkw4UjduTENUdkRtSkxDaWc1ZEJQQ1pJOXlMcWhLOW4zUGsyZ0dwYTUrZWlPbTRHenhwbU1UanVZCnVsUHB1b09kMWd2UXN0b0VYQTZSK1lhSUZRWmtiQlRFcUh0bW9pZ0UzQmdJd1RMTEpyUzhsQThCMUNBczdRMWUKSjUwck1FK2RTUm56ZmdZanVVZUMreDJqZmlmeEtBcFVMbUxlUEdhcHJ0M0Vjakd1ZWNpMGxMMnQwNnMyMGFyQgpaYkxmUmJxeVI3dldXWUpZRElvbW5iL2JwVVJBOFhFbFFWaWJsbjJqUCtRYXpsUUZ4Nk9Gcy9FdCsvVEJISS9rCjhGbFZ3QlQza3JtSzJOdmo2VHRvYlp6Sng4a1FrRnB6eWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlERERDQ0FmU2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUyTnpjeE5qTTJNemN3SGhjTk1qTXdNakl6TVRRME56RTJXaGNOTWpVd01qSXkKTVRRME56RTNXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMk56Y3hOak0yTXpjdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZlhBbDlUK2pmaHVwT2IxVUY4aTF6CmlGSkZIczc3dDlHazV6N2paTUFYbXFnYzMrNjhta2lCRWFnLzV1Z3l6WmRDR3VFdG50NHcrRHlQd2VSaFZYSTQKWHltaXBsWm90R2Vrc0xxM21wVmx2V2Z0RXBWZkFGWFBUVld1YVRnN2tTNWZ5K0hKcFlWUW9CVmczR05oV1lwOQo1eGlkMDhrSW5HZjVWOGhHbkVHSFo3TDdnSFFhdzVoVDVhRVNkZ3dKQkVIRVhSUjQxU2NOSm5mT3BFRVVQNk5yCm5KUkdVcVJjU1pMK0M2czhMQ1lkMk5DKy9JRDhhVkF6Y3E2aGkxTFZiLzZMeWdobnl0SWMxMjdLNWhKUkpUOU4KL3lpMmFldmZaNStjdmlOZkNiQVNaNkx6dC94ZTUzNzJ2anU3OVZRTE8yRFhrUmpXSi9oOXpHZUxMQmM4eEpkSgpBZ01CQUFHalJUQkRNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHCkExVWREZ1FXQkJSRWF2Mk1QcFdTY0d3Q1UzU3U4b0VhV21OaWdEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKbE5JL3JBYTVjcHZJRFUxQTRSTHdHSzNyVXFTdCtOb3lldkZVZm8vaExzNUE0ZDhXc2RrcDljbnU0eHNsT3NBUgpVS1ZPN01zRVEvS0NKWjFHeEpHZnhNdFZMeE1vVHNGMDY4a3U3RTZReDJsd2NKTkg4TG5aT0E0ZjkvaHkvV0h0Cjh6Z1ptZHlVdVgyNHI3U3BWK1B5ZktKS0VGN3MzdTRuQmUzbEV0Qm1ReTRNU2d3NWVOL3YyQ3FqU1lIQU5UWW0KemZKTkkwKzU5QXpRT3pBQ3VwM2ZtTlNEQ1pJT3NTMHZ1ejhmSU9LeENVaTYvWk1GQ0hyRUlFL0RabkpBMU9DdwptY2tIRnZhWkQxZEJRVDdDa1o1MGNBd2I0NUMvMk5TaW85VDV5WmxteHFNaWZjd2hmaS9STDNaSXFGM3ZFR2pFCnJUTC9BdjBmSWpMYVBoSmZINTN5Mnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSUJ6UFMwSSszYXpBd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJek1ESXlNekUwTWpNek0xb1hEVE16TURJeU1ERTBNak16TTFvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuU2wzRExEb2I2TC8KeVA3NzBHYzRYUjZSMys4dDdKbDNOcjlWRFlLUktQZmhkcXRkK0VGZytwTkYxVnNBWGRZc0lrMzJJV1Rxa2o5SQpCcWc3TW9KNlpBMlQ4S25FT2JSQm5XMUUycDEzc0N4TUZXOTY5eFJPNFMxN09LWGhOWHhMS0NRbWlTakNUcVZOCjJuWkdlOEF3NU95TnQ2cDI0N2VrU3AwV0tJNDA3MWNvTHZnRDU2YlVTZzJGQzZCcWVpb0xldkRrMzVzMDI0aUoKaVMzKzVxdzJNUzRZcGxidWtxa0R6dGh5bkFiK3MxdEN4S1VwTWF6cEo1M2pmTkdLdnBoQmc3QjMzeUZzSVJZZgpmU0JRNDh0a1NPZFZnSHQyZ2RkWEx4VTV5N3BJWUE1K01pZUJxeXlMSFBDZ1plRE1nMWFaOTV3d29SYTIrL1VnCk45L0dJU29Nc3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUw0bjVoM0UwRnVwOEtnMmkwY2pmeE02bEgvRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUk5M3ZRZDFlUFFFdHB4b1JrVXNYMWVSUHlUOFc4MGUraVRNRGtseHgwOGZLZmFBWFFXTnBocWllWHV6CjdlZEsrRnM1NllFWDdlQW9xbVZBaHJtdDV0WkVlT2RZTUcyRGFXU0NkT0xoN3Izbi9tdnhkNzE4VGRYalZZbkUKcnFKd2ZzMHFmQ3I5YVhNT2NiUDR4NjZHNWdJQnZYVHE3MGs5cGhodzJVZ2xjSmVqT21KSHlzTUdYeHlpSFJiMwprOEdERWlNeDlpRkVDUjVlMlpMOVBzdmJhZkdxNWtXZU9vUWF0Z0dkcU0vU1BSM1dwVjlsa280M3U5V1Y4Z3BTCk85aVduZHN4SkRWT0VEemFUbXJ4NUZVb1dIRGJyd3dqN01yYUYxYWwxOFhrUkJZT1RqNzZqOEZKWnlGWDNjbzQKM3VlRXJpZmhVY3dyVHZyS2hQdllaYzdLTlJBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUt0NDRtS3RxWFlnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl6TURJeU16RTBNak16TTFvWERUTXpNREl5TURFME1qTXpNMW93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTYySmhsTDE4L1FGVUNVanJvemNOeEhRN3JlMG1JV09nYWx6aGxXWVhZdWZUcTZzYVkvYUJZVkQyYzBKQgovSmlSbWM0YjVzdFRLY0htWW9VdHFGOFNaOWhsSXArbGpTTUJFQXZ0SU5pN2hyNHVRMmJjL1Q0a2ZQdklwejJ4CmFIVnFoMEF6VHFmUDhybzZLdnJMdXV0Qzh3YitQWTR3OVNrN29KOWhmanFLckhDRXROcmJSUTZLWDIzYmV3bE4KTitEdUpzVGhkcE5UYmFmc2NFalpQYkVOb1ZkYmYyMTJ5ZSs2czF1UFFiRGViQjRpc1V6Z0ZIZ1VLUmhkYXRrdwpvbUE1eHBxZTZVV0NDVWlQZEpNVjJ3cTdZQk5TemxCRE1oK0VKR2hPclVXQXFGajQrT3VZMXFEdG1CV2xqTGRmCjdDNDdMdDFrUTVVS2pSa3ZiTlh0Vmx4YWx3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVMS1hPWmNMZnM0UXVxT2VUSlY1c0duL3hqYTB3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLNWI2K3o2ZlJsSThmR25nc1E0TTJWNFY5VnRPbHluWUJRZnBOR1BGVDNJCmlZcktCcFc4N0orU1hWY3NEU1pHUWtyZU9IaTZ0aG1qSUFrUVgzeFFLYU5LOHdrQnNIVUo2NUVUSGZxUjBuQW0Kd1czbkhXU2piMG5ET0dMRktKOEVUMDRwRUxUZG5wbGFtRXBmZFlESTZ6cGxVZmlUc0E5ZmxJbURnQUtiOW5KZQoxYkFaS2hkK1Y5SUswSHVwaFBLSURoRHFJQ0ZVK0hIZVY2NVlYZkp1L1l5bWlxS3ZFSHBTb0E5RTlLaGw0dmU0CllaZmRUNkxoQWdnalk4YVRlc0dmSkd3azlYSkV5K09zQUhlZWY3NWpNVHo4cEFsZnE0aUtIK092OUNhTGMzbXEKQlB2NWtBNk9ja25DZmF4Q1FhYzBob0gwY2VSOVQ5ZTRJZ0FDWjVRc0d0cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlOMUtVekxmWkI5Z3dEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13TWpJek1UUXlNek0wV2hjTk16TXdNakl3TVRReU16TTBXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOM1FteHhYN25mYzU5MkdYMGJneE5VMHQvd3owejVyCkZFdE90YTduL0luWUlmQWJQcGFOaytqZmlMVWdMY25HSEc2Zm1WQ1YyaFRBWUdKaFQ4VWhva3hPd0l4REl0aisKVXRtMzJ6VkJSRi9vS1J3S01kcE01TThva3ZhbWRqV3hHQXFtWGJWcU1tOHVyUVplMC9KelpLS2ZLQUVlMG95VApmWkJ2dFlhc0xtNmVIdUp0WmViRWNqMWRleS9tS2FPM0Y2NkdnMUNqRVpHeHEwMUw3VGoyYUVCTzdjQkNLMjlNCmxYKzZSWmJDMk1OS0dESGM0ZWNtU3hhdXhjYXA1cUxpeEdzUFRkTWMwaVZ2K2FxaDBzS1BOdkhpWUlBRXNMSEkKZDdGdElmQjE3alo3N3JjQ2NwaHo2ZUdDT3dPQnZkTUM5Uk16SmwvejhYbk00UFUyWG9tTHV4OENBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSlFWCmcxakpqL1VNYWMveDcwSFJxcXltNkNXbk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlBMNVN5NjZCSENCb3EKdFZGb1ljNzI3MVk2SFBaUGdNTE5zZzBTRFVjKzcySWQ0a0RNTEFDQTdSSEF0R0MwdXQvUFZkVVRRckptdWpSOQpTMW1LZDQ0bHY1MTI2MnEzMVl0OTJ3TmdYVndudDFOUUlpSEFJU0RSQWlHZnJhblAxWjZnbEFnbGg0bnl5Y1VYCkV2NzB6RTlFQkFXbVJ2eHlFVGw3NWVnQzRzYXg2MXJxaVJDeGJVVndxc2lhQmJKZ3MwZmdVb3lXMHhaS3hUSlgKdGVnYlhDdEh4T0M1TG00cDBpN0RuYlZiazVPb0pmVVM2Z3RnNGpKNG5LS1ZadFkyRVJ0c1l2VkJ3YWU3NStlegppZXNzOE5vK01GNkRRTWgwVTZRK0FpM2hwV28xTUhZbzZ3MFM2R3BxYkpWUTc4cmFFNlFXdHBtNUx3TU1jSlV4CnVUQzhlN3d5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://api.orchidee.okd-dev.abes.fr:6443
  name: api-orchidee-okd-dev-abes-fr:6443
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkVENDQWwyZ0F3SUJBZ0lJWVFzWlY4QW1oZHd3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE5qYzNNVFl6TmpNM01CNFhEVEl6TURJeU16RTBORGN4TjFvWApEVEkxTURJeU1qRTBORGN4T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVoY0hCekxtOXlZMmhwWkdWbExtOXJaQzFrClpYWXVZV0psY3k1bWNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtRSzBqdTUKd3FpYndKeGs2TjROV01ETmpOK2U2Tk9aSkN1blJEUjlPMXljaUFuWGU0RjN5TGtOT0U5bXFuN0xvYzZUU05ibQpEdDlLMlJxSTVrL0pnKzdaaHd0N2NSemZFU21aUkU0cW8rY2kxNFNLMm51cnNYVnlVQUlwcDVxQWdlaXBUN0FSCmtSbjhBZUM0U0JuNjI3V2twejBlRG1zSFoyWGR4NW53cFJuSkhkSGY4ck1PNmxPaWRLMnc3YXJrSHdKQUxxT0sKQitXT1kxNXBVcVR6VnBuczJvdGY2UHJNWnM5MXY5emhUNXNZaDdBR2FlWUdVVEkrc3VVa1VUTk04a3ZiOGRoRgphVFBqbVJodDhMaVZCL3ZHdzhId1A1S0dVa2MyZ252MndhVU90YjZjalVGbGhCL0Nnbm1lQmlpb2JCY0hXTWR0CitkdnprbnkweGwraGEwa0NBd0VBQWFPQm9qQ0JuekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3cKQ2dZSUt3WUJCUVVIQXdFd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVaU5uR0hMS3JrNkpkc3B0cAp1NS9ZU1pvbTNVTXdId1lEVlIwakJCZ3dGb0FVUkdyOWpENlZrbkJzQWxOMHJ2S0JHbHBqWW9Bd0tnWURWUjBSCkJDTXdJWUlmS2k1aGNIQnpMbTl5WTJocFpHVmxMbTlyWkMxa1pYWXVZV0psY3k1bWNqQU5CZ2txaGtpRzl3MEIKQVFzRkFBT0NBUUVBU1N6YkJDaEs3WE5GT2xUMUNlRCtoQnphNm9ndjBhSDVoMEtxY29TN2dnMTk4MEtMRko0bwptd24yaXJNYkw4UjduTENUdkRtSkxDaWc1ZEJQQ1pJOXlMcWhLOW4zUGsyZ0dwYTUrZWlPbTRHenhwbU1UanVZCnVsUHB1b09kMWd2UXN0b0VYQTZSK1lhSUZRWmtiQlRFcUh0bW9pZ0UzQmdJd1RMTEpyUzhsQThCMUNBczdRMWUKSjUwck1FK2RTUm56ZmdZanVVZUMreDJqZmlmeEtBcFVMbUxlUEdhcHJ0M0Vjakd1ZWNpMGxMMnQwNnMyMGFyQgpaYkxmUmJxeVI3dldXWUpZRElvbW5iL2JwVVJBOFhFbFFWaWJsbjJqUCtRYXpsUUZ4Nk9Gcy9FdCsvVEJISS9rCjhGbFZ3QlQza3JtSzJOdmo2VHRvYlp6Sng4a1FrRnB6eWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlERERDQ0FmU2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUyTnpjeE5qTTJNemN3SGhjTk1qTXdNakl6TVRRME56RTJXaGNOTWpVd01qSXkKTVRRME56RTNXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMk56Y3hOak0yTXpjdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZlhBbDlUK2pmaHVwT2IxVUY4aTF6CmlGSkZIczc3dDlHazV6N2paTUFYbXFnYzMrNjhta2lCRWFnLzV1Z3l6WmRDR3VFdG50NHcrRHlQd2VSaFZYSTQKWHltaXBsWm90R2Vrc0xxM21wVmx2V2Z0RXBWZkFGWFBUVld1YVRnN2tTNWZ5K0hKcFlWUW9CVmczR05oV1lwOQo1eGlkMDhrSW5HZjVWOGhHbkVHSFo3TDdnSFFhdzVoVDVhRVNkZ3dKQkVIRVhSUjQxU2NOSm5mT3BFRVVQNk5yCm5KUkdVcVJjU1pMK0M2czhMQ1lkMk5DKy9JRDhhVkF6Y3E2aGkxTFZiLzZMeWdobnl0SWMxMjdLNWhKUkpUOU4KL3lpMmFldmZaNStjdmlOZkNiQVNaNkx6dC94ZTUzNzJ2anU3OVZRTE8yRFhrUmpXSi9oOXpHZUxMQmM4eEpkSgpBZ01CQUFHalJUQkRNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHCkExVWREZ1FXQkJSRWF2Mk1QcFdTY0d3Q1UzU3U4b0VhV21OaWdEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKbE5JL3JBYTVjcHZJRFUxQTRSTHdHSzNyVXFTdCtOb3lldkZVZm8vaExzNUE0ZDhXc2RrcDljbnU0eHNsT3NBUgpVS1ZPN01zRVEvS0NKWjFHeEpHZnhNdFZMeE1vVHNGMDY4a3U3RTZReDJsd2NKTkg4TG5aT0E0ZjkvaHkvV0h0Cjh6Z1ptZHlVdVgyNHI3U3BWK1B5ZktKS0VGN3MzdTRuQmUzbEV0Qm1ReTRNU2d3NWVOL3YyQ3FqU1lIQU5UWW0KemZKTkkwKzU5QXpRT3pBQ3VwM2ZtTlNEQ1pJT3NTMHZ1ejhmSU9LeENVaTYvWk1GQ0hyRUlFL0RabkpBMU9DdwptY2tIRnZhWkQxZEJRVDdDa1o1MGNBd2I0NUMvMk5TaW85VDV5WmxteHFNaWZjd2hmaS9STDNaSXFGM3ZFR2pFCnJUTC9BdjBmSWpMYVBoSmZINTN5Mnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSUJ6UFMwSSszYXpBd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJek1ESXlNekUwTWpNek0xb1hEVE16TURJeU1ERTBNak16TTFvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFuU2wzRExEb2I2TC8KeVA3NzBHYzRYUjZSMys4dDdKbDNOcjlWRFlLUktQZmhkcXRkK0VGZytwTkYxVnNBWGRZc0lrMzJJV1Rxa2o5SQpCcWc3TW9KNlpBMlQ4S25FT2JSQm5XMUUycDEzc0N4TUZXOTY5eFJPNFMxN09LWGhOWHhMS0NRbWlTakNUcVZOCjJuWkdlOEF3NU95TnQ2cDI0N2VrU3AwV0tJNDA3MWNvTHZnRDU2YlVTZzJGQzZCcWVpb0xldkRrMzVzMDI0aUoKaVMzKzVxdzJNUzRZcGxidWtxa0R6dGh5bkFiK3MxdEN4S1VwTWF6cEo1M2pmTkdLdnBoQmc3QjMzeUZzSVJZZgpmU0JRNDh0a1NPZFZnSHQyZ2RkWEx4VTV5N3BJWUE1K01pZUJxeXlMSFBDZ1plRE1nMWFaOTV3d29SYTIrL1VnCk45L0dJU29Nc3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUw0bjVoM0UwRnVwOEtnMmkwY2pmeE02bEgvRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUk5M3ZRZDFlUFFFdHB4b1JrVXNYMWVSUHlUOFc4MGUraVRNRGtseHgwOGZLZmFBWFFXTnBocWllWHV6CjdlZEsrRnM1NllFWDdlQW9xbVZBaHJtdDV0WkVlT2RZTUcyRGFXU0NkT0xoN3Izbi9tdnhkNzE4VGRYalZZbkUKcnFKd2ZzMHFmQ3I5YVhNT2NiUDR4NjZHNWdJQnZYVHE3MGs5cGhodzJVZ2xjSmVqT21KSHlzTUdYeHlpSFJiMwprOEdERWlNeDlpRkVDUjVlMlpMOVBzdmJhZkdxNWtXZU9vUWF0Z0dkcU0vU1BSM1dwVjlsa280M3U5V1Y4Z3BTCk85aVduZHN4SkRWT0VEemFUbXJ4NUZVb1dIRGJyd3dqN01yYUYxYWwxOFhrUkJZT1RqNzZqOEZKWnlGWDNjbzQKM3VlRXJpZmhVY3dyVHZyS2hQdllaYzdLTlJBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUt0NDRtS3RxWFlnd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEl6TURJeU16RTBNak16TTFvWERUTXpNREl5TURFME1qTXpNMW93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTYySmhsTDE4L1FGVUNVanJvemNOeEhRN3JlMG1JV09nYWx6aGxXWVhZdWZUcTZzYVkvYUJZVkQyYzBKQgovSmlSbWM0YjVzdFRLY0htWW9VdHFGOFNaOWhsSXArbGpTTUJFQXZ0SU5pN2hyNHVRMmJjL1Q0a2ZQdklwejJ4CmFIVnFoMEF6VHFmUDhybzZLdnJMdXV0Qzh3YitQWTR3OVNrN29KOWhmanFLckhDRXROcmJSUTZLWDIzYmV3bE4KTitEdUpzVGhkcE5UYmFmc2NFalpQYkVOb1ZkYmYyMTJ5ZSs2czF1UFFiRGViQjRpc1V6Z0ZIZ1VLUmhkYXRrdwpvbUE1eHBxZTZVV0NDVWlQZEpNVjJ3cTdZQk5TemxCRE1oK0VKR2hPclVXQXFGajQrT3VZMXFEdG1CV2xqTGRmCjdDNDdMdDFrUTVVS2pSa3ZiTlh0Vmx4YWx3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVMS1hPWmNMZnM0UXVxT2VUSlY1c0duL3hqYTB3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLNWI2K3o2ZlJsSThmR25nc1E0TTJWNFY5VnRPbHluWUJRZnBOR1BGVDNJCmlZcktCcFc4N0orU1hWY3NEU1pHUWtyZU9IaTZ0aG1qSUFrUVgzeFFLYU5LOHdrQnNIVUo2NUVUSGZxUjBuQW0Kd1czbkhXU2piMG5ET0dMRktKOEVUMDRwRUxUZG5wbGFtRXBmZFlESTZ6cGxVZmlUc0E5ZmxJbURnQUtiOW5KZQoxYkFaS2hkK1Y5SUswSHVwaFBLSURoRHFJQ0ZVK0hIZVY2NVlYZkp1L1l5bWlxS3ZFSHBTb0E5RTlLaGw0dmU0CllaZmRUNkxoQWdnalk4YVRlc0dmSkd3azlYSkV5K09zQUhlZWY3NWpNVHo4cEFsZnE0aUtIK092OUNhTGMzbXEKQlB2NWtBNk9ja25DZmF4Q1FhYzBob0gwY2VSOVQ5ZTRJZ0FDWjVRc0d0cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlOMUtVekxmWkI5Z3dEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05Nak13TWpJek1UUXlNek0wV2hjTk16TXdNakl3TVRReU16TTBXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOM1FteHhYN25mYzU5MkdYMGJneE5VMHQvd3owejVyCkZFdE90YTduL0luWUlmQWJQcGFOaytqZmlMVWdMY25HSEc2Zm1WQ1YyaFRBWUdKaFQ4VWhva3hPd0l4REl0aisKVXRtMzJ6VkJSRi9vS1J3S01kcE01TThva3ZhbWRqV3hHQXFtWGJWcU1tOHVyUVplMC9KelpLS2ZLQUVlMG95VApmWkJ2dFlhc0xtNmVIdUp0WmViRWNqMWRleS9tS2FPM0Y2NkdnMUNqRVpHeHEwMUw3VGoyYUVCTzdjQkNLMjlNCmxYKzZSWmJDMk1OS0dESGM0ZWNtU3hhdXhjYXA1cUxpeEdzUFRkTWMwaVZ2K2FxaDBzS1BOdkhpWUlBRXNMSEkKZDdGdElmQjE3alo3N3JjQ2NwaHo2ZUdDT3dPQnZkTUM5Uk16SmwvejhYbk00UFUyWG9tTHV4OENBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSlFWCmcxakpqL1VNYWMveDcwSFJxcXltNkNXbk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlBMNVN5NjZCSENCb3EKdFZGb1ljNzI3MVk2SFBaUGdNTE5zZzBTRFVjKzcySWQ0a0RNTEFDQTdSSEF0R0MwdXQvUFZkVVRRckptdWpSOQpTMW1LZDQ0bHY1MTI2MnEzMVl0OTJ3TmdYVndudDFOUUlpSEFJU0RSQWlHZnJhblAxWjZnbEFnbGg0bnl5Y1VYCkV2NzB6RTlFQkFXbVJ2eHlFVGw3NWVnQzRzYXg2MXJxaVJDeGJVVndxc2lhQmJKZ3MwZmdVb3lXMHhaS3hUSlgKdGVnYlhDdEh4T0M1TG00cDBpN0RuYlZiazVPb0pmVVM2Z3RnNGpKNG5LS1ZadFkyRVJ0c1l2VkJ3YWU3NStlegppZXNzOE5vK01GNkRRTWgwVTZRK0FpM2hwV28xTUhZbzZ3MFM2R3BxYkpWUTc4cmFFNlFXdHBtNUx3TU1jSlV4CnVUQzhlN3d5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    server: https://api.orchidee.okd-dev.abes.fr:6443
  name: orchidee
contexts:
- context:
    cluster: orchidee
    user: admin
  name: admin
- context:
    cluster: api-orchidee-okd-dev-abes-fr:6443
    namespace: convergence
    user: system:admin/api-orchidee-okd-dev-abes-fr:6443
  name: convergence/api-orchidee-okd-dev-abes-fr:6443/system:admin
- context:
    cluster: api-orchidee-okd-dev-abes-fr:6443
    namespace: item-dsin
    user: system:admin/api-orchidee-okd-dev-abes-fr:6443
  name: item-dsin/api-orchidee-okd-dev-abes-fr:6443/system:admin
- context:
    cluster: api-orchidee-okd-dev-abes-fr:6443
    namespace: movies-docker-beta
    user: system:admin/api-orchidee-okd-dev-abes-fr:6443
  name: movies-docker-beta/api-orchidee-okd-dev-abes-fr:6443/system:admin
- context:
    cluster: api-orchidee-okd-dev-abes-fr:6443
    namespace: movies-docker-light
    user: system:admin/api-orchidee-okd-dev-abes-fr:6443
  name: movies-docker-light/api-orchidee-okd-dev-abes-fr:6443/system:admin
- context:
    cluster: api-orchidee-okd-dev-abes-fr:6443
    namespace: qualimarc-dsin
    user: system:admin/api-orchidee-okd-dev-abes-fr:6443
  name: qualimarc-dsin/api-orchidee-okd-dev-abes-fr:6443/system:admin
- context:
    cluster: api-orchidee-okd-dev-abes-fr:6443
    namespace: qualimarc-dsin2
    user: system:admin/api-orchidee-okd-dev-abes-fr:6443
  name: qualimarc-dsin2/api-orchidee-okd-dev-abes-fr:6443/system:admin
- context:
    cluster: api-orchidee-okd-dev-abes-fr:6443
    namespace: qualimarc-final
    user: system:admin/api-orchidee-okd-dev-abes-fr:6443
  name: qualimarc-final/api-orchidee-okd-dev-abes-fr:6443/system:admin
- context:
    cluster: api-orchidee-okd-dev-abes-fr:6443
    namespace: qualimarc
    user: system:admin/api-orchidee-okd-dev-abes-fr:6443
  name: qualimarc/api-orchidee-okd-dev-abes-fr:6443/system:admin
current-context: movies-docker-beta/api-orchidee-okd-dev-abes-fr:6443/system:admin
kind: Config
preferences: {}
users:
- name: admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJTk5FTnVRS1FMOGt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBeU1qTXhOREl6TXpKYUZ3MHpNekF5TWpBeE5ESXpNek5hTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUQ2UXJYeXJhTFB3VmZQbnRueVZrVEVMd3ZzUXVCUWRGMEtiV2JTYmMwaQpsdTk4eDFTUFRVNDRoZVYvY1hrWVpaVy80Mm1VQ3daT2VqZDdwZWdQcGIxczljQkhNVzE2NElyemUrRmhUcFZECjE4NWxUQmg3bUhsYXZNZkhDMTE1L1c3NVZqZGM1THlaUzIzYzdOVmlicmloeE9tUGpQU3NwL2VsNVJxb0Z0SFEKMnBFeFc0eTVCaGJXYXk3U1FHTm5sRjJZMUVieFcxRUtqeTcyMGM4R05KU21xZ01NdDRzUDhKb1B1cC92aFRleAo2L0hCN01SVVhtc05tZllEODdOQmNwNGI4V2g2TWpEWmRNRDdLUVYrK01FM3NNcXVwREpWYTRMdlZ1bUt5NHR6Ci9FQlRLZ1ZuZlJJR0ozbXlWKzRzN1EvSXRsZmtOd3JnVkdLYmhOM3B5UkRyQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVV5NmF1V3NNQUp1azdJUWErdkl5dmJxTUswUzR3SHdZRFZSMGpCQmd3CkZvQVVTNisraTJ6TW5EVXEvQUxZVWFlNFFKVjhweVF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZ5U1pMRHgKbE4zSVVBQ2lBalFTUHJ1SXowYXgwTWZ4RWk4U1l4M29uZ2l1UGNvelY2TUcydkhLYU1Ud1JNQWU5L0ZhelRQMQpwSWVGTWtVMDRsdmFjTHp4eEFaWDB1Ry9aaGJmK0syOEV3cDU2Mm1JM3I0blpBdU0vZEZPRzlQUitxckZ4SlRGClZGbnRhLzVIYVpkQzBaRUJCWkNZdFU0SlR6ZEdoSjBUdE9obVNGV0tRRGlOQjA0UTdIY2FGbjVnclF3cmtsdGQKazV3TjlyRkl1c0U5U3FnQmRZb013NnZuRTNHNjJHdnlsd3JqOTdvdFlBZ21vVC8wa0o5Z1Vua0ZVVjlCZ0lmcAo4Y3lucnRtOUJFQ2dPcTZDdmZmM0hiZ2lRTm5uOW5OTzRpT3FhNlJoRTJyVDlUSUlseEJ5MUhNejZDaUpiWU44CkZxVDBLeWpUOGJ6UGVSVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBK2tLMThxMml6OEZYejU3WjhsWkV4QzhMN0VMZ1VIUmRDbTFtMG0zTklwYnZmTWRVCmowMU9PSVhsZjNGNUdHV1Z2K05wbEFzR1RubzNlNlhvRDZXOWJQWEFSekZ0ZXVDSzgzdmhZVTZWUTlmT1pVd1kKZTVoNVdyekh4d3RkZWYxdStWWTNYT1M4bVV0dDNPelZZbTY0b2NUcGo0ejByS2YzcGVVYXFCYlIwTnFSTVZ1TQp1UVlXMW1zdTBrQmpaNVJkbU5SRzhWdFJDbzh1OXRIUEJqU1VwcW9ERExlTEQvQ2FEN3FmNzRVM3Nldnh3ZXpFClZGNXJEWm4yQS9PelFYS2VHL0ZvZWpJdzJYVEEreWtGZnZqQk43REtycVF5Vld1QzcxYnBpc3VMYy94QVV5b0YKWjMwU0JpZDVzbGZ1TE8wUHlMWlg1RGNLNEZSaW00VGQ2Y2tRNndJREFRQUJBb0lCQUV3QmRzRDllelVkdzAyTApNU1lvalRvSUQ5YnhlSzcycUV0Q2JyZjZJUk1nUkJ2aGJnMFhyV245UUhZMFFGTG9oMUovL3RDM2lITE5LNHlpCkZwaXAvWjNhQlV1WjkyWWFUQmtteG95SEVVNUpmS1hITnFoUzVvaG9UVVJtYnoxZGV4YSsySkdkNXFtbi92WFoKOS9TdEsrWDFwL214Rlo1YVpSdzlPSnRVVXVUYTR2NW5YT2pVNU9wVy95czZMMXJNQXdtQ0d0TllVVW4vSGNZeApJeXVwZ0MvZVdyR2c0WHVhUmZ3Nzlwc1ZpaDFwbENHOE9qZ0tnUWdULzZLWm16VlNONUtreldJc1pzYTRNeEFZCmZRN2ZJM2JxL2JGbGxuNERVSDNic05UdlpFTVdrd3RVdzNlQ1k4UU9pKzZ1R2srR2dNaHh4RDZCeXNsTGsvOTMKcWduMEpBRUNnWUVBL0VXQmpUVU56ZDlNR3Q0aFJOa2MvYVFzWWJUV1BPVkF5bWR0ZXltMW5rUmRJRmpOMXBhNQo3ZE9BUFlOYmNnKytrNXFlbnlQUzJlQmhsYkQ5NWVHM3B6OFdTVWN4TzMxM1Rkanppc1RIZm5jM3N4ejNLY1lUCjg1Vk45SzZWOVI5czJHRlNSYzYvaFZpRGU1NHdIRWJYZjN4YXU4UXI5UE9TcEpTWGw2aWZUL2tDZ1lFQS9mV1kKbml6bC83YjMyeUNvUG1PNDE5dmxLaHJ2bmY1b09OMW1ROW5kRDVOTDdUSzhMNVJ1b0d2eUhjMzJRaGplaC8wZApPRVhpNlFQS3pFY2NoTDZoc1Q1eUszVHZqcUdQT2pyQlB2UkdBK2lmR244YzRXbjM0MHhMMnJlVGc1SmM2TDVMCm4xWDlaNDIydUNXRXVHbGR5b3k4bEJpT3E1aUIrNThQVUJ5T2FRTUNnWUJEcHNRYVFSc0ZsWmRNTVR1TXdnaVQKUUg2aWFTTjJ5eWYzMzRxdGw3N2J4WXVQekNEUEpqYVFQOExKUER1K3Q5Z3NyeTlRa0FQUVorcmpnTVpsNm9VYwp0YjlkUVZsRGtkNzNvbkdWU2pZUmhSa0wwSDI3MXlHc2xlS0U5bmpDZG4zeS9RNWFLQnFXUU9scHNqOUdwZnpPCmRHUEVyTlA0NllUdTIrWlhSbUlLeVFLQmdRRG80d2F3enRXZ0dXYlRzTy80UHJTc1pyK1JUQ0ErejZVOXVISm0KZUd5TE12Vm1zS2I0THZMLzg5MlV6V0l0bk9hODZEV2FmQ1Fvc015UlpnaldCb2I2cGh4R2s3WjNJdHJZZURicwpoMCtKbUJJSFYxZmhzcTZhNTBXTWJkbzl4c09pdjVkVHA2UjVDUER0ajZKVkJuTDNJdlp3RE5FUXRRdEY5c2d4CkcrN1Fod0tCZ0hzcHAySTVjbGtxRFNOdFRQcWNEeEhwQitYaWZCRjNXMEtUSUFEb1V0QTJTVk9yS0hXZXVKQzYKSUQvU29nWVA5TnFlOEhNSjZESDA0bkVPL3B4WnJKc2JqQm5jeTFrU3hCTEg1K3lscURFZko0elBCWElSVm5wbwpJOUtRWFJnTGJuUlp1VVprYjFlTmRQSm5GVVRCUWQwUlhSOC82eGh0SldkR3hEMkdaSWNkCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
- name: system:admin/api-orchidee-okd-dev-abes-fr:6443
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJTk5FTnVRS1FMOGt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB5TXpBeU1qTXhOREl6TXpKYUZ3MHpNekF5TWpBeE5ESXpNek5hTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUQ2UXJYeXJhTFB3VmZQbnRueVZrVEVMd3ZzUXVCUWRGMEtiV2JTYmMwaQpsdTk4eDFTUFRVNDRoZVYvY1hrWVpaVy80Mm1VQ3daT2VqZDdwZWdQcGIxczljQkhNVzE2NElyemUrRmhUcFZECjE4NWxUQmg3bUhsYXZNZkhDMTE1L1c3NVZqZGM1THlaUzIzYzdOVmlicmloeE9tUGpQU3NwL2VsNVJxb0Z0SFEKMnBFeFc0eTVCaGJXYXk3U1FHTm5sRjJZMUVieFcxRUtqeTcyMGM4R05KU21xZ01NdDRzUDhKb1B1cC92aFRleAo2L0hCN01SVVhtc05tZllEODdOQmNwNGI4V2g2TWpEWmRNRDdLUVYrK01FM3NNcXVwREpWYTRMdlZ1bUt5NHR6Ci9FQlRLZ1ZuZlJJR0ozbXlWKzRzN1EvSXRsZmtOd3JnVkdLYmhOM3B5UkRyQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVV5NmF1V3NNQUp1azdJUWErdkl5dmJxTUswUzR3SHdZRFZSMGpCQmd3CkZvQVVTNisraTJ6TW5EVXEvQUxZVWFlNFFKVjhweVF3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZ5U1pMRHgKbE4zSVVBQ2lBalFTUHJ1SXowYXgwTWZ4RWk4U1l4M29uZ2l1UGNvelY2TUcydkhLYU1Ud1JNQWU5L0ZhelRQMQpwSWVGTWtVMDRsdmFjTHp4eEFaWDB1Ry9aaGJmK0syOEV3cDU2Mm1JM3I0blpBdU0vZEZPRzlQUitxckZ4SlRGClZGbnRhLzVIYVpkQzBaRUJCWkNZdFU0SlR6ZEdoSjBUdE9obVNGV0tRRGlOQjA0UTdIY2FGbjVnclF3cmtsdGQKazV3TjlyRkl1c0U5U3FnQmRZb013NnZuRTNHNjJHdnlsd3JqOTdvdFlBZ21vVC8wa0o5Z1Vua0ZVVjlCZ0lmcAo4Y3lucnRtOUJFQ2dPcTZDdmZmM0hiZ2lRTm5uOW5OTzRpT3FhNlJoRTJyVDlUSUlseEJ5MUhNejZDaUpiWU44CkZxVDBLeWpUOGJ6UGVSVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBK2tLMThxMml6OEZYejU3WjhsWkV4QzhMN0VMZ1VIUmRDbTFtMG0zTklwYnZmTWRVCmowMU9PSVhsZjNGNUdHV1Z2K05wbEFzR1RubzNlNlhvRDZXOWJQWEFSekZ0ZXVDSzgzdmhZVTZWUTlmT1pVd1kKZTVoNVdyekh4d3RkZWYxdStWWTNYT1M4bVV0dDNPelZZbTY0b2NUcGo0ejByS2YzcGVVYXFCYlIwTnFSTVZ1TQp1UVlXMW1zdTBrQmpaNVJkbU5SRzhWdFJDbzh1OXRIUEJqU1VwcW9ERExlTEQvQ2FEN3FmNzRVM3Nldnh3ZXpFClZGNXJEWm4yQS9PelFYS2VHL0ZvZWpJdzJYVEEreWtGZnZqQk43REtycVF5Vld1QzcxYnBpc3VMYy94QVV5b0YKWjMwU0JpZDVzbGZ1TE8wUHlMWlg1RGNLNEZSaW00VGQ2Y2tRNndJREFRQUJBb0lCQUV3QmRzRDllelVkdzAyTApNU1lvalRvSUQ5YnhlSzcycUV0Q2JyZjZJUk1nUkJ2aGJnMFhyV245UUhZMFFGTG9oMUovL3RDM2lITE5LNHlpCkZwaXAvWjNhQlV1WjkyWWFUQmtteG95SEVVNUpmS1hITnFoUzVvaG9UVVJtYnoxZGV4YSsySkdkNXFtbi92WFoKOS9TdEsrWDFwL214Rlo1YVpSdzlPSnRVVXVUYTR2NW5YT2pVNU9wVy95czZMMXJNQXdtQ0d0TllVVW4vSGNZeApJeXVwZ0MvZVdyR2c0WHVhUmZ3Nzlwc1ZpaDFwbENHOE9qZ0tnUWdULzZLWm16VlNONUtreldJc1pzYTRNeEFZCmZRN2ZJM2JxL2JGbGxuNERVSDNic05UdlpFTVdrd3RVdzNlQ1k4UU9pKzZ1R2srR2dNaHh4RDZCeXNsTGsvOTMKcWduMEpBRUNnWUVBL0VXQmpUVU56ZDlNR3Q0aFJOa2MvYVFzWWJUV1BPVkF5bWR0ZXltMW5rUmRJRmpOMXBhNQo3ZE9BUFlOYmNnKytrNXFlbnlQUzJlQmhsYkQ5NWVHM3B6OFdTVWN4TzMxM1Rkanppc1RIZm5jM3N4ejNLY1lUCjg1Vk45SzZWOVI5czJHRlNSYzYvaFZpRGU1NHdIRWJYZjN4YXU4UXI5UE9TcEpTWGw2aWZUL2tDZ1lFQS9mV1kKbml6bC83YjMyeUNvUG1PNDE5dmxLaHJ2bmY1b09OMW1ROW5kRDVOTDdUSzhMNVJ1b0d2eUhjMzJRaGplaC8wZApPRVhpNlFQS3pFY2NoTDZoc1Q1eUszVHZqcUdQT2pyQlB2UkdBK2lmR244YzRXbjM0MHhMMnJlVGc1SmM2TDVMCm4xWDlaNDIydUNXRXVHbGR5b3k4bEJpT3E1aUIrNThQVUJ5T2FRTUNnWUJEcHNRYVFSc0ZsWmRNTVR1TXdnaVQKUUg2aWFTTjJ5eWYzMzRxdGw3N2J4WXVQekNEUEpqYVFQOExKUER1K3Q5Z3NyeTlRa0FQUVorcmpnTVpsNm9VYwp0YjlkUVZsRGtkNzNvbkdWU2pZUmhSa0wwSDI3MXlHc2xlS0U5bmpDZG4zeS9RNWFLQnFXUU9scHNqOUdwZnpPCmRHUEVyTlA0NllUdTIrWlhSbUlLeVFLQmdRRG80d2F3enRXZ0dXYlRzTy80UHJTc1pyK1JUQ0ErejZVOXVISm0KZUd5TE12Vm1zS2I0THZMLzg5MlV6V0l0bk9hODZEV2FmQ1Fvc015UlpnaldCb2I2cGh4R2s3WjNJdHJZZURicwpoMCtKbUJJSFYxZmhzcTZhNTBXTWJkbzl4c09pdjVkVHA2UjVDUER0ajZKVkJuTDNJdlp3RE5FUXRRdEY5c2d4CkcrN1Fod0tCZ0hzcHAySTVjbGtxRFNOdFRQcWNEeEhwQitYaWZCRjNXMEtUSUFEb1V0QTJTVk9yS0hXZXVKQzYKSUQvU29nWVA5TnFlOEhNSjZESDA0bkVPL3B4WnJKc2JqQm5jeTFrU3hCTEg1K3lscURFZko0elBCWElSVm5wbwpJOUtRWFJnTGJuUlp1VVprYjFlTmRQSm5GVVRCUWQwUlhSOC82eGh0SldkR3hEMkdaSWNkCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

kind: Secret
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: kubeconfig
  name: kubeconfig
type: Opaque
